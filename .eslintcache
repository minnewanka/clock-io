[{"/Users/philippe/Documents/clock-io/src/reportWebVitals.ts":"1","/Users/philippe/Documents/clock-io/src/App.tsx":"2","/Users/philippe/Documents/clock-io/src/index.tsx":"3","/Users/philippe/Documents/clock-io/src/pages/Home.tsx":"4","/Users/philippe/Documents/clock-io/src/pages/Settings.tsx":"5","/Users/philippe/Documents/clock-io/src/i18n.ts":"6","/Users/philippe/Documents/clock-io/src/AppWrapper.tsx":"7","/Users/philippe/Documents/clock-io/src/components/Clock.tsx":"8","/Users/philippe/Documents/clock-io/src/components/GPS.tsx":"9","/Users/philippe/Documents/clock-io/src/hooks/postion.tsx":"10","/Users/philippe/Documents/clock-io/src/providers/UserProvider.tsx":"11","/Users/philippe/Documents/clock-io/src/utils/function.ts":"12","/Users/philippe/Documents/clock-io/src/components/ClockingHistory.tsx":"13","/Users/philippe/Documents/clock-io/src/theme/index.tsx":"14","/Users/philippe/Documents/clock-io/src/components/Button.tsx":"15"},{"size":425,"mtime":1609242329020,"results":"16","hashOfConfig":"17"},{"size":2096,"mtime":1609759042389,"results":"18","hashOfConfig":"17"},{"size":549,"mtime":1609758972551,"results":"19","hashOfConfig":"17"},{"size":2373,"mtime":1609739377901,"results":"20","hashOfConfig":"17"},{"size":2645,"mtime":1609740999899,"results":"21","hashOfConfig":"17"},{"size":1061,"mtime":1609287966550,"results":"22","hashOfConfig":"17"},{"size":297,"mtime":1609641489922,"results":"23","hashOfConfig":"17"},{"size":1298,"mtime":1609741722801,"results":"24","hashOfConfig":"17"},{"size":2006,"mtime":1609741923157,"results":"25","hashOfConfig":"17"},{"size":942,"mtime":1609298130198,"results":"26","hashOfConfig":"17"},{"size":1949,"mtime":1609735932785,"results":"27","hashOfConfig":"17"},{"size":599,"mtime":1609300595381,"results":"28","hashOfConfig":"17"},{"size":1866,"mtime":1609741887926,"results":"29","hashOfConfig":"17"},{"size":495,"mtime":1609738453703,"results":"30","hashOfConfig":"17"},{"size":922,"mtime":1609738965324,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bp9jpl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/philippe/Documents/clock-io/src/reportWebVitals.ts",[],["71","72"],"/Users/philippe/Documents/clock-io/src/App.tsx",["73"],"import React, { useState, useContext } from \"react\";\nimport { Container, Row } from \"react-grid-system\";\nimport { useTranslation } from \"react-i18next\";\nimport styled from \"styled-components\";\nimport Home from \"./pages/Home\";\nimport Settings from \"./pages/Settings\";\nimport i18n from \"./i18n\";\n\nconst LanguageButton = styled.button<{ isActive: boolean }>`\nbackground: none;\ncolor: ${(props) => (props.isActive ? \"black\" : \"lightgrey\")};\nborder: none;\npadding: 0;\nfont: 2rem;\ncursor: pointer;\noutline: inherit;\nmargin: 0.5rem;\n}\n`;\n\nconst ToolBox = styled(Row)`\n  margin-bottom: 0.5rem;\n`;\n\nconst Title = styled.h1`\n  font-size: 50px;\n  text-align: center;\n  color: ${(props) => props.theme.colors.blue};\n  background-colors: ${(props) => props.theme.colors.lightblue};\n`;\n\nconst ClickableIcon = styled.button`\n  background: none;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n`;\n\nconst StyledContainer = styled(Container)`\n  height: 100%;\n`;\n\nconst App: React.FC = () => {\n  const [page, setPage] = useState(0);\n  const { t } = useTranslation();\n  const changeLanguage = (lng: string) => {\n    i18n.changeLanguage(lng);\n  };\n  const getLanguage = () => {\n    return i18n.language;\n  };\n  return (\n    <StyledContainer className=\"App\">\n      <Title>{t(\"title\")}</Title>\n      <ToolBox justify=\"end\">\n        <ClickableIcon\n          data-testid=\"page-icon\"\n          onClick={() => (page === 1 ? setPage(0) : setPage(1))}\n        >\n          {page === 0 ? (\n            <i className=\"fa fa-2x fa-cog\"></i>\n          ) : (\n            <i className=\"fa fa-2x fa-arrow-left\"></i>\n          )}\n        </ClickableIcon>\n        <LanguageButton\n          isActive={getLanguage() === \"en\"}\n          onClick={() => changeLanguage(\"en\")}\n        >\n          EN\n        </LanguageButton>\n        <LanguageButton\n          isActive={getLanguage() === \"fr\"}\n          onClick={() => changeLanguage(\"fr\")}\n        >\n          FR\n        </LanguageButton>\n      </ToolBox>\n      {page === 0 ? <Home /> : <Settings />}\n    </StyledContainer>\n  );\n};\n\nexport default App;\n","/Users/philippe/Documents/clock-io/src/index.tsx",["74"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppWrapper from \"./AppWrapper\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport i18n from \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/philippe/Documents/clock-io/src/pages/Home.tsx",["75"],"import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"react-grid-system\";\nimport { useTranslation } from \"react-i18next\";\nimport { format } from \"date-fns\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport Clock from \"../components/Clock\";\nimport GPS from \"../components/GPS\";\nimport Button from \"../components/Button\";\nimport ClockingHistory from \"../components/ClockingHistory\";\n\nconst StyledButton = styled(Button)<{ isClockIn: boolean }>`\n  background-color: ${(props) =>\n    props.isClockIn ? props.theme.colors.green : props.theme.colors.orange};\n`;\n\nconst Home: React.FC = () => {\n  const {\n    gps,\n    settings,\n    clockingEntries,\n    setClockingEntries,\n    isClockIn,\n    setIsClockIn,\n  } = useContext(UserContext);\n  const { t } = useTranslation();\n  const fetchAPI = (latitude: number, longitude: number) => {\n    const token =\n      \"pk.eyJ1IjoiaWFtYXBhcms4OSIsImEiOiJjanlpZmF5c3AwOXJzM2NxaDQzNWhiaDRmIn0.C-e2EpmyDtsqPbu9FjJz5Q\";\n    return fetch(\n      `https://api.mapbox.com/geocoding/v5/mapbox.places/${longitude.toPrecision(\n        9\n      )},${latitude.toPrecision(9)}.json?access_token=${token}`\n    );\n  };\n\n  const isOutOfRange =\n    !gps.distance || (gps.distance && gps.distance > settings.range);\n\n  let label = \"\";\n  if (isOutOfRange) {\n    label = t(\"outofrange\");\n  } else {\n    label = isClockIn ? t(\"clockin\") : t(\"clockout\");\n  }\n\n  const handleOnClick = () => {\n    fetchAPI(gps.latitude, gps.longitude)\n      .then((response) => response.json())\n      .then((data) => {\n        const address = data.features[0].properties.address;\n        const date = format(new Date(), \"dd/MM @ HH:mm aaaa\");\n        setClockingEntries([\n          { type: isClockIn ? \"in\" : \"out\", date, address },\n          ...clockingEntries,\n        ]);\n      });\n    setIsClockIn(!isClockIn);\n  };\n\n  return (\n    <>\n      <Row align=\"center\">\n        <Col>\n          <GPS />\n        </Col>\n        <Col>\n          <Clock />\n        </Col>\n        <Col>\n          <ClockingHistory />\n        </Col>\n      </Row>\n      <Row justify=\"center\">\n        <StyledButton\n          isClockIn={isClockIn}\n          label={label}\n          type=\"button\"\n          onClick={handleOnClick}\n          disabled={isOutOfRange || false}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/philippe/Documents/clock-io/src/pages/Settings.tsx",["76"],"import React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"react-grid-system\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport Button from \"../components/Button\";\n\nconst Section = styled.div`\n  background-color: ${(props) => props.theme.colors.lightblue};\n  margin: 2rem;\n  padding: 1rem 2rem 2rem 2rem;\n`;\n\nconst Input = styled.input`\n  border-radius: 3rem;\n  padding: 5px;\n  border: 1px solid ${(props) => props.theme.colors.blue};\n`;\n\nconst Label = styled.label`\n  display: inline-block;\n  min-width: 100px;\n`;\n\nconst Div = styled.div`\n  margin: 1rem;\n`;\n\nconst Range = styled.span`\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  padding: 8px;\n  margin-left: 1rem;\n  font-size: 1.2rem;\n  background-color: ${(props) => props.theme.colors.white};\n`;\n\nconst Settings: React.FC = () => {\n  const { settings, setSettings } = useContext(UserContext);\n  const { t } = useTranslation();\n  const [range, setRange] = useState(settings.range);\n  const [latitude, setLatitude] = useState(settings.latitude);\n  const [longitude, setLongitude] = useState(settings.longitude);\n\n  return (\n    <>\n      <h1>{t(\"settings.title\")}</h1>\n      <Section>\n        <h2>{t(\"settings.subtitle.range\")}</h2>\n        <Label htmlFor=\"range\">{t(\"settings.label.range\")}</Label>\n        <input\n          id=\"range\"\n          type=\"range\"\n          min=\"5\"\n          max=\"20\"\n          value={range}\n          step=\"1\"\n          onChange={(event) => setRange(Number(event.target.value))}\n        />\n        <Range>{range}</Range>\n      </Section>\n      <Section>\n        <h2>{t(\"settings.subtitle.location\")}</h2>\n        <Div>\n          <Label htmlFor=\"latitude\">{t(\"settings.label.latitude\")}</Label>\n          <Input\n            id=\"latitude\"\n            type=\"number\"\n            name=\"latitude\"\n            value={latitude}\n            onChange={(event) => setLatitude(Number(event.target.value))}\n          />\n        </Div>\n        <Div>\n          <Label htmlFor=\"longitude\">{t(\"settings.label.longitude\")}</Label>\n          <Input\n            id=\"longitude\"\n            type=\"number\"\n            name=\"longitude\"\n            value={longitude}\n            onChange={(event) => setLongitude(Number(event.target.value))}\n          />\n        </Div>\n      </Section>\n      <Row justify=\"center\">\n        <Button\n          type=\"submit\"\n          onClick={() => {\n            setSettings({ range, latitude, longitude });\n          }}\n          label={t(\"settings.save\")}\n        />\n      </Row>\n    </>\n  );\n};\n\nexport default Settings;\n","/Users/philippe/Documents/clock-io/src/i18n.ts",[],"/Users/philippe/Documents/clock-io/src/AppWrapper.tsx",[],"/Users/philippe/Documents/clock-io/src/components/Clock.tsx",["77","78"],"import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { format } from \"date-fns\";\nimport { UserContext } from \"../providers/UserProvider\";\n\nconst Div = styled.div<{ isClockIn: boolean }>`\n  box-sizing: content-box;\n  height: 20em;\n  width: 20em;\n  line-height: 20em;\n  margin: auto;\n  background-color: ${(props) =>\n    props.isClockIn ? props.theme.colors.blue : props.theme.colors.green};\n  border-radius: 50%;\n  text-align: center;\n  text-transform: uppercase;\n  border: 5px solid ${(props) => props.theme.colors.white};\n  box-shadow: 0 0 0 5px ${(props) =>\n    props.isClockIn ? props.theme.colors.blue : props.theme.colors.green};\n}\n`;\n\nconst Text = styled.span`\n  font-size: 42px;\n  color: white;\n`;\n\nconst Clock: React.FC = () => {\n  const { isClockIn } = useContext(UserContext);\n  const [date, setDate] = useState(new Date());\n  const tick = () => {\n    setDate(new Date());\n  };\n  useEffect(() => {\n    const timerID = setInterval(() => tick(), 1000);\n    return function cleanup() {\n      clearInterval(timerID);\n    };\n  });\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  return (\n    <Div isClockIn={isClockIn}>\n      <Text>{format(date, \"HH:mm aaaa\")}</Text>\n    </Div>\n  );\n};\n\nexport default Clock;\n","/Users/philippe/Documents/clock-io/src/components/GPS.tsx",["79","80"],"import React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { usePosition } from \"../hooks/postion\";\nimport { useTranslation } from \"react-i18next\";\nimport { UserContext } from \"../providers/UserProvider\";\nimport { haversineDistance } from \"../utils/function\";\nimport Button from \"./Button\";\n\nconst Container = styled.div`\n  border: 2px solid ${(props) => props.theme.colors.lightgrey};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-radius: 5px;\n  padding: 5px;\n  margin: 1rem;\n`;\n\nconst Text = styled.div`\n  margin: 1rem;\n  font-size: 1.2em;\n`;\n\ninterface Position {\n  latitude: number;\n  longitude: number;\n}\n\nconst GPS: React.FC = () => {\n  const { gps, setGps, settings, setSettings } = useContext(UserContext);\n  const [hasError, setHasError] = useState(false);\n  const { t } = useTranslation();\n\n  const onSuccess = ({ coords }: { coords: Position }) => {\n    const distance = haversineDistance(\n      coords.latitude,\n      coords.longitude,\n      settings.latitude,\n      settings.longitude\n    );\n    setGps({\n      isActived: true,\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      distance: Math.round(distance * 10) / 10,\n    });\n  };\n  const onError = () => {\n    setHasError(true);\n  };\n\n  const activate = () =>\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n\n  return (\n    <Container>\n      <h2>{t(\"gps.currentPosition\")}</h2>\n      <div>Latitude: {gps.latitude === 0 ? \"?\" : gps.latitude}</div>\n      <div>Longitude: {gps.longitude === 0 ? \"?\" : gps.longitude}</div>\n      {hasError && t(\"gps.error\")}\n      <Text>\n        {gps.isActived\n          ? gps.distance && gps.distance < settings.range\n            ? t(\"gps.arrived\")\n            : t(\"gps.outofrange\", { distance: gps.distance })\n          : null}\n      </Text>\n      {!gps.isActived && (\n        <Button type=\"button\" label=\"Activate GPS\" onClick={activate} />\n      )}\n    </Container>\n  );\n};\n\nexport default GPS;\n","/Users/philippe/Documents/clock-io/src/hooks/postion.tsx",["81","82"],"/Users/philippe/Documents/clock-io/src/providers/UserProvider.tsx",["83"],"import React, { Context, createContext, useState, useEffect } from \"react\";\n\nconst UserContext: Context<UserContext> = createContext({} as UserContext);\n\ninterface ClockingEntry {\n  type: string;\n  date: string;\n  address: string;\n}\n\nexport interface Settings {\n  range: number;\n  latitude: number;\n  longitude: number;\n}\nexport interface GPS {\n  distance?: number;\n  isActived: boolean;\n  latitude: number;\n  longitude: number;\n}\ninterface UserContext {\n  gps: GPS;\n  clockingEntries: ClockingEntry[];\n  setGps: (gps: GPS) => void;\n  settings: Settings;\n  setSettings: (settings: Settings) => void;\n  setClockingEntries: (entries: ClockingEntry[]) => void;\n  isClockIn: boolean;\n  setIsClockIn: (status: boolean) => void;\n}\n\nconst initialSettings = {\n  range: 5,\n  latitude: 0,\n  longitude: 0,\n};\nconst initialGPS = {\n  isActived: false,\n  latitude: 0,\n  longitude: 0,\n};\n\nconst initialSettingsState =\n  JSON.parse(localStorage.getItem(\"settings\") as string) || initialSettings;\n\nconst initialEntriesState =\n  JSON.parse(localStorage.getItem(\"clockingEntries\") as string) || [];\n\nconst UserProvider: React.FC = ({ children }) => {\n  const [isClockIn, setIsClockIn] = useState(true);\n  const [settings, setSettings] = useState(initialSettingsState);\n  const [clockingEntries, setClockingEntries] = useState<ClockingEntry[]>(\n    initialEntriesState\n  );\n  const [gps, setGps] = useState(initialGPS);\n\n  useEffect(() => {\n    localStorage.setItem(\"settings\", JSON.stringify(settings));\n  }, [settings]);\n\n  useEffect(() => {\n    localStorage.setItem(\"clockingEntries\", JSON.stringify(clockingEntries));\n  }, [clockingEntries]);\n\n  return (\n    <UserContext.Provider\n      value={{\n        isClockIn,\n        setIsClockIn,\n        settings,\n        setSettings,\n        gps,\n        setGps,\n        clockingEntries,\n        setClockingEntries,\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport { UserProvider, UserContext };\n","/Users/philippe/Documents/clock-io/src/utils/function.ts",[],["84","85"],"/Users/philippe/Documents/clock-io/src/components/ClockingHistory.tsx",[],"/Users/philippe/Documents/clock-io/src/theme/index.tsx",[],"/Users/philippe/Documents/clock-io/src/components/Button.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":37},{"ruleId":"90","severity":1,"message":"94","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":12},{"ruleId":"90","severity":1,"message":"95","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"96","line":3,"column":15,"nodeType":"92","messageId":"93","endLine":3,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":40,"column":9,"nodeType":"92","messageId":"93","endLine":40,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":41,"column":9,"nodeType":"92","messageId":"93","endLine":41,"endColumn":16},{"ruleId":"90","severity":1,"message":"99","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":21},{"ruleId":"90","severity":1,"message":"100","line":30,"column":34,"nodeType":"92","messageId":"93","endLine":30,"endColumn":45},{"ruleId":"90","severity":1,"message":"101","line":9,"column":10,"nodeType":"92","messageId":"93","endLine":9,"endColumn":19},{"ruleId":"90","severity":1,"message":"102","line":9,"column":21,"nodeType":"92","messageId":"93","endLine":9,"endColumn":33},{"ruleId":"103","severity":1,"message":"104","line":22,"column":11,"nodeType":"92","messageId":"105","endLine":22,"endColumn":22},{"ruleId":"86","replacedBy":"106"},{"ruleId":"88","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'i18n' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'hours' is assigned a value but never used.","'minutes' is assigned a value but never used.","'usePosition' is defined but never used.","'setSettings' is assigned a value but never used.","'isActived' is assigned a value but never used.","'setActivated' is assigned a value but never used.","@typescript-eslint/no-redeclare","'UserContext' is already defined.","redeclared",["108"],["109"],"no-global-assign","no-unsafe-negation"]